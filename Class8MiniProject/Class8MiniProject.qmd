---
title: "Class 8 Mini Project"
format: pdf
---

Preparing the Data
```{r}
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)
```
Viewing head of dataset
```{r}
head(wisc.df)
```

Removing first column 

```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
```

Creating Diagnosis Vector
```{r}
diagnosis <- as.factor(wisc.df[,1])
diagnosis
```

> 
Q1. How many observations are in this dataset?

```{r}
dim(wisc.data)
```

There are 569 rows therefore there are 569 observations

> Q2. How many of the observations have a malignant diagnosis?

Using `table()` to find total number of Ms there are a total of 212 malignant diagnoses.
```{r}
table(diagnosis)
```

> Q3. How many variables/features in the data are suffixed with _mean?

```{r}
length(grep("_mean", colnames(wisc.data)))
```

There are 10 variables with the names with a suffix of _mean.


Preforming PCA
```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```

```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data, scale = TRUE)
summary(wisc.pr)
```

> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

A proportion of 0.4427 (44.27%) of the original variance is captured by PC 1.

> How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

It takes 3 PCs to cover at least 70% of the original variance.

>How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

It takes 7 PCs to cover at least 90% of the original variance.


Interpreting PCA Results

```{r}
biplot(wisc.pr)
```

> Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

The plot looks very cramped and is very difficult to gain meaning out of. Everything is clumped together and impossible to read.

Scatterplot
```{r}
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x , col = diagnosis , 
     xlab = "PC1", ylab = "PC2")
```

> Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

I notice there is a good amount of overlap with outliers present as well. I'd say to treat the outliers first since they are far from the "norm" in this case. In addition, the graph of PC 1 and 3 has the points lower on the graph than PC 1 and 2 which is indicative of PC3 covering less variance than PC2.
```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[, c(1,3)], col = diagnosis, 
     xlab = "PC1", ylab = "PC3")

```

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

Variance Explained

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

```{r}
## ggplot based graph
#install.packages("factoextra")
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```


```{r}
y <- summary(wisc.pr)
attributes(y)
```
> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation[,1]
wisc.pr$rotation["concave.points_mean",1]
```



> Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

```{r}
sum(y$importance[3,] <=0.8)
y
```

The minimum number is 5 to cover at least 80% of variance of the data.

Combine PCA with clustering
I want to cluster in "PC space". 
```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col = diagnosis)
```

```{r}
#summary(wisc.pr$x)
```

The `hclust()` function wants a distance matrix as input...

```{r}
d <- dist(wisc.pr$x[,1:7])
wisc.pr.hclust <- hclust(d, method = "ward.D2")
plot(wisc.pr.hclust)
```

```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
```

```{r}
data.dist <- dist(data.scaled)
```

```{r}
wisc.hclust <- hclust(data.dist, method = "complete")
```

> Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

At a height of 19 we get 4 clusters. 

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=6)
table(wisc.hclust.clusters, diagnosis)
```

> Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

I found 6 clusters to be best in this case.

>Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

```{r}
wisc.hclust_method <- hclust(data.dist, method = "ward.D2")
plot(wisc.hclust_method)
```

I like the ward.D2 method. It creates clusters to minimize variance within the clusters. 

>Q15. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}
grps_4 <- cutree(wisc.pr.hclust, k=4)
table(grps_4)
```

```{r}
table(grps_4, diagnosis)
table(grps, diagnosis)
```

The 4 clusters is worse since if something were to fall into cluster 3 the false positive rate is much higher than cluster 1 of the 2 cluster method. 


>Q17. Which of your analysis procedures resulted in a clustering model with the best specificity? How about sensitivity?

The combining methods was most useful to get the best specificity since we were able to use the power of PCA and hclustering to find optimal specificity. It also produces the best sensitivity as well. 

>Q18. Which of these new patients should we prioritize for follow up based on your results?

We should follow up with the extreme outlier patients as they have the highest variance from the norm. 